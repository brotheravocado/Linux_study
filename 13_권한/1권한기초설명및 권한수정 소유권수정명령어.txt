
-	2
--	4
---	8  (0~7)

000	0	---
001	1	--x
010	2	-w-
100	4	r--
111	7	rwx

110	6	rw-
011	3	-wx
010	2	-w-
001	1	--x
111	7	rwx
-----------------------------------------------------
r  w  x  r  w  x   r  w  x
ㅡ ㅡ ㅡ   ㅡ ㅡ ㅡ  ㅡ ㅡ ㅡ  9bit = 허가권 / 777= 최고권한
UID	   GID	     Other
r :  Read
w :  Write
x :  Access & Execute   (접근 및 실행)
symbolic = rwx
numeric = 777
==========================================================
허가권을 수정하는 명령어
chmod 644 test  : 뉴메릭을 가장 많이 쓴다
chmod u±rx test 
chmod g±rx test
chmod o±rx test
=========================================================================
**디렉토리 권한**
최고권한		777	rwxrwxrwx
최저권한		000	---------

디렉토리에서 r 권한
ls ,dir 등과 같은 디렉토리의 내부 내용을 읽어 들이는것과 관련

디렉토리에서 w 권한
mkdir,touch,rm,mv 등과 같은 디렉토리 내부에 생성,수정,삭제와 관련이 있다

디렉토리에서 x 권한 = 진짜 중요 = 방문을 못연다  = r w 권한이 아무 의미가 없다
디렉토리 접근과 관련이 있다
★★디렉토리에 x가 없다는 것은 명령어를 이용 할 수 가 없게 된다★★
=======================================================================
**파일 권한**
최고권한		666	rw-rw-rw-
최저권한		000	---------

파일에서 r 권한
cat,more,vim,cp 등과 같은 파일의 내용을 읽어 들이는 것과 관련

파일에서 w 권한
cat, echo, vim 등과 같은 파일의 내용을 수정,변경하는 것과 관련이 있다
vim 같은 경우는 :wq! 로 저장이 가능하긴 하다 (소유주만 적용)

파일에서 x 권한
실행 파일 같은 경우 실행 여부와 관련이 있다
★★★ 문서에는 x 권한이 없다 ★★★ but,!!!  .sh 를 주석처리한 경우 실행파일로 인식한다.
	/bin/* /sbin/* 모든 실행파일은 전부다 755 다 => 실행이라는 개념이 들어가므로
========================================================================
소유권 바꾸는 명령어
chown user1 test	:test 파일의 소유자를 user1으로 바꿈
chown user1:user1 test	:test 파일의 소유자와 그룹을 user1 으로 바꿈
=chown user1. test
chown user1:root test	:test 파일의 소유자는 user1, 그룹은 root 로 바꿈
=chown root.user2 test
chgrp user1 test	:test 파일의 소유그룹을 user1으로 바꿈
=chown .user1 test
==========================================================================
. 	리눅스 용
:	리눅스 & 유닉스 용 
ls -l 
drwxrwxrwx. 2 root root 4096 2012~~~~~~ /test  		777
 x 권한이란 ? 
	하위 디렉토리나 하위 파일이 있는지 없는지 확인하기 위해서 접근

-rw-rw-rw-. 2 root root 4096 2012~~~~~~ /test/1		666
	예외 777 .sh = 실행파일 
--------------------------------------------------------------------
drwxr-xr-x. 2 root root 4096 2018-06-24 10:27 test		root 로그인해서 mkdir 한것			
drwxrwxr-x. 2 kgitbank kgitbank 1024 2018-06-24 11:05 test	kgitbank 로그인해서 mkdir 한것

777 - 022 = 755	root		관리자 계정
777 - 002 = 775	kgitbank	일반 계정

/etc/bashrc  65행에 명시되어 있다
/etc/profile 61행에도 명시되어 있다 
DIR 
일반계정($)	002	mkdir	775	rwxrwxr-x
root(#)		022	mkdir 	755	rwxr-xr-x

file
일반계정($)	002	touch	664	rw-rw-r--
root(#)		022	touch 	644	rw-r--r--	

umask ?  해당 DIR/File 의 권한수행을 위해서 제한을 두는것
	/etc/bashrc

DIR	전체권한 777
		UMASK	 222
------------------------------
			 555
권한 결론
1. UID=GID  =>  UID > GID
2. 허가권		<	소유권



















